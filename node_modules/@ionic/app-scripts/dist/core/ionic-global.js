"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../util/helpers");
var logger_1 = require("../logger/logger");
var MagicString = require("magic-string");
function prependIonicGlobal(context, fileName, code) {
    var rtn = {
        code: code,
        map: undefined
    };
    try {
        var ionicGlobal = buildIonicGlobal(context);
        var s = new MagicString(code);
        s.prepend(ionicGlobal);
        rtn.code = s.toString();
        rtn.map = s.generateMap({
            source: fileName,
            file: fileName,
            includeContent: true
        });
    }
    catch (e) {
        logger_1.Logger.error("prependIonicGlobal: " + e);
    }
    return rtn;
}
exports.prependIonicGlobal = prependIonicGlobal;
function buildIonicGlobal(context) {
    if (context.windowIonic) {
        // just a quick way to cache this to avoid unnecessary readFiles
        return context.windowIonic;
    }
    var systemData = helpers_1.getSystemData(context.rootDir);
    var staticDir = helpers_1.toUnixPath(context.buildDir.replace(context.wwwDir, ''));
    staticDir += '/';
    if (staticDir.charAt(0) === '/') {
        staticDir = staticDir.substring(1);
    }
    var output = "\n    (function(w){\n      var i = w.Ionic = w.Ionic || {};\n      " + (systemData.ionicFramework ? "i.version = '" + systemData.ionicFramework + "';" : '') + "\n      " + (systemData.angularCore ? "i.angular = '" + systemData.angularCore + "';" : '') + "\n      " + (systemData.ionicNative ? "i.ionicNative = '" + systemData.ionicNative + "';" : '') + "\n      i.staticDir = '" + staticDir + "';\n    })(window);";
    // real quick minification hacks
    output = output.replace('var i', 'var_i');
    output = output.replace(/\s/g, '');
    output = output.replace('var_i', 'var i');
    return context.windowIonic = output;
}
exports.buildIonicGlobal = buildIonicGlobal;
